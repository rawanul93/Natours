
@import "../abstracts/mixins";
@import "../abstracts/variables";

*,
*::after,
*::before {
    margin: 0px;
    padding: 0px;
    box-sizing: inherit;
}

body {
    box-sizing: border-box; /* change the box model so that borders and paddings are not added to the height/width of elements which is done by default if not specified like this. */
    padding: 0 0rem;
    overflow-x: hidden !important;

    @include respond(tab-port) { 
        padding: 0;
    }
    @include respond(tab-land) { 
        padding: 0;
    }

}

html {

    scroll-behavior: smooth;

    // this defines what 1rem is = 10px (10px/16px) = 62.5%
    font-size: 62.5%;

    // the order we put them in matters a lot because at times more than one condition is met for the media query (e.g. if screen is < 600px, it is also true that it is < 900px. But both cannot be applied. Only the last one registered will be applied. Hence this order

    @include respond(tab-land) { // width < 900?
        font-size: 56.25%; // 1rem = 9px -> 9/16 = 56.25%;
    }

    @include respond(tab-port) { // width < 600?
        font-size: 50%; // 1rem = 8px -> 8/16 = 50%;
    }

    @include respond(phone) {
        font-size: 50%; // 1rem = 8px -> 8/16 = 50%;
    }

    @include respond(big-desktop) {
        font-size: 75%;  // 1rem = 12px -> 12/16 = 75%;
    }
}

::selection { // pseudo element. Doing this to style any selected element.
    background-color: $color-primary-light;
    color: $color-white;
}